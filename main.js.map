{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/cards.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const initialCards = [\n  {\n    name: \"Архыз\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n  },\n  {\n    name: \"Челябинская область\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n  },\n  {\n    name: \"Иваново\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n  },\n  {\n    name: \"Камчатка\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n  },\n  {\n    name: \"Холмогорский район\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n  },\n  {\n    name: \"Байкал\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n  },\n];\n\nexport { initialCards };\n","// @todo: Темплейт карточки\nexport const cardTemplate = document.querySelector(\"#card-template\").content;\n\n// @todo: Функция создания карточки\nexport function createCard(\n  cardTemplate,\n  item,\n  removeCard,\n  openImagePopup,\n  likedButton,\n) {\n  const cardElement = cardTemplate\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  cardImage.src = item.link;\n  cardImage.alt = item.name;\n  cardTitle.textContent = item.name;\n\n  deleteButton.addEventListener(\"click\", removeCard);\n\n  cardImage.addEventListener(\"click\", function () {\n    openImagePopup(item);\n  });\n\n  cardLikeButton.addEventListener(\"click\", likedButton);\n\n  return cardElement;\n}\n\n// @todo: Функция удаления карточки\nexport function removeCard(evt) {\n  const listItem = evt.target.closest(\".places__item\");\n  listItem.remove();\n}\n\n// Функция лайка\nexport function likedButton(evt) {\n  evt.target.classList.toggle(\"card__like-button_is-active\");\n}\n","// Функция добавления класса popup_is-opened\nexport function openModal(item) {\n  item.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closeByEsc);\n}\n\n// Функция удаления класса popup_is-opened\nexport function closeModal(item) {\n  item.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closeByEsc);\n}\n\n// Функция закрытия через Esc\nexport function closeByEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closeModal(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\nexport function closePopupOverlay(evt) {\n  if (evt.currentTarget === evt.target) {\n    closeModal(evt.target);\n  }\n}\n","import \"./pages/index.css\";\n\nimport { initialCards } from \"./scripts/cards.js\";\n\nimport {\n  cardTemplate,\n  createCard,\n  removeCard,\n  likedButton,\n} from \"./components/card.js\";\n\nimport {\n  openModal,\n  closeModal,\n  closePopupOverlay,\n} from \"./components/modal.js\";\n\n// @todo: DOM узлы\nconst placesList = document.querySelector(\".places__list\");\n\nconst profile = document.querySelector(\".profile\");\nconst profileInfo = profile.querySelector(\".profile__info\");\nconst profileEditButton = profileInfo.querySelector(\".profile__edit-button\");\nconst profileAddButton = profile.querySelector(\".profile__add-button\");\nconst profileTitle = profileInfo.querySelector(\".profile__title\");\nconst profileDescription = profileInfo.querySelector(\".profile__description\");\n\nconst formElement = document.forms[\"edit-profile\"];\nconst nameInput = formElement.elements.name;\nconst jobInput = formElement.elements.description;\n\nconst allPopups = document.querySelectorAll(\".popup\");\n\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\nconst popupImage = popupTypeImage.querySelector(\".popup__image\");\n\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\n\nconst newPlace = document.forms[\"new-place\"];\n\n// Функция добавления новой карточки\nfunction addNewCard(evt) {\n  evt.preventDefault();\n\n  const placeName = newPlace.elements[\"place-name\"];\n  const link = newPlace.elements.link;\n\n  const item = {\n    name: placeName.value,\n    link: link.value,\n  };\n\n  const newCardElement = createCard(\n    cardTemplate,\n    item,\n    removeCard,\n    openImagePopup,\n    likedButton,\n  );\n  placesList.prepend(newCardElement);\n\n  closeModal(popupTypeNewCard);\n  evt.target.reset();\n}\n\n// Функция открытия поп-апа для картинок\nfunction openImagePopup(item) {\n  const popupCaption = popupTypeImage.querySelector(\".popup__caption\");\n\n  popupImage.src = item.link;\n  popupImage.alt = item.name;\n  popupCaption.textContent = item.name;\n  openModal(popupTypeImage);\n}\n\n// Функция редактирования профиля\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n\n  profileTitle.textContent = nameInput.value;\n  profileDescription.textContent = jobInput.value;\n  closeModal(popupTypeEdit);\n}\n\n// Функция перебора всех поп-апов для удаления класса popup_is-opened\nallPopups.forEach(function (item) {\n  const popupCloseButton = item.querySelector(\".popup__close\");\n  popupCloseButton.addEventListener(\"click\", function () {\n    closeModal(item);\n  });\n  item.addEventListener(\"click\", closePopupOverlay);\n  item.classList.add(\"popup_is-animated\");\n});\n\n// @todo: Вывести карточки на страницу\ninitialCards.forEach(function (item) {\n  const eachElement = createCard(\n    cardTemplate,\n    item,\n    removeCard,\n    openImagePopup,\n    likedButton,\n    addNewCard,\n  );\n  placesList.append(eachElement);\n});\n\n// Функция открытия поп-апа редактирования профиля нажатием на карандаш\nprofileEditButton.addEventListener(\"click\", () => {\n  openModal(popupTypeEdit);\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n});\n\n// Функция открытия поп-апа добавления нового места нажатием на плюсик\nprofileAddButton.addEventListener(\"click\", () => {\n  openModal(popupTypeNewCard);\n});\n\nnewPlace.addEventListener(\"submit\", addNewCard);\n\nformElement.addEventListener(\"submit\", handleProfileFormSubmit);\n"],"names":["cardTemplate","document","querySelector","content","createCard","item","removeCard","openImagePopup","likedButton","cardElement","cloneNode","deleteButton","cardLikeButton","cardImage","cardTitle","src","link","alt","name","textContent","addEventListener","evt","target","closest","remove","classList","toggle","openModal","add","closeByEsc","closeModal","removeEventListener","key","closePopupOverlay","currentTarget","placesList","profile","profileInfo","profileEditButton","profileAddButton","profileTitle","profileDescription","formElement","forms","nameInput","elements","jobInput","description","allPopups","querySelectorAll","popupTypeImage","popupImage","popupTypeNewCard","popupTypeEdit","newPlace","popupCaption","forEach","eachElement","append","value","preventDefault","placeName","newCardElement","prepend","reset"],"sourceRoot":""}