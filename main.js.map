{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// Данные для успешной авторизации на сервере\nexport const config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-20\",\n  headers: {\n    authorization: \"4ae982e8-2b2c-468a-80fa-ed13fba03bc0\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n// Функция обработки ответа от сервера\nexport const getResponse = (result) => {\n  if (result.ok) {\n    return result.json();\n  }\n  return Promise.reject(`Ошибка: ${result.status}`);\n};\n\n// Функция загрузки информации о пользователе с сервера\nexport function loadingProfileInfo() {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"GET\",\n    headers: config.headers,\n  }).then(getResponse);\n}\n\n// Функция загрузки карточек с сервера\nexport function loadingCardsInfo() {\n  return fetch(`${config.baseUrl}/cards `, {\n    method: \"GET\",\n    headers: config.headers,\n  }).then(getResponse);\n}\n\n// Функция редактирования профиля с сервера\nexport function patchEditProfile(nameInput, jobInput) {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: nameInput,\n      about: jobInput,\n    }),\n  });\n}\n\n// Функция отправки данных карточки на сервер\nexport function postNewCard(placeName, link) {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: placeName,\n      link: link,\n    }),\n  }).then(getResponse);\n}\n\n// Функция загрузки лайков\nexport function loadingLikesQuantity() {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"GET\",\n    headers: config.headers,\n  }).then(getResponse);\n}\n\n// Функция удаления карточки с сервера\nexport function deleteCardServer(id) {\n  return fetch(`${config.baseUrl}/cards/${id}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(getResponse);\n}\n\n// Функция удаления лайка\nexport function deleteLike(id) {\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(getResponse);\n}\n\n// Функция постановки лайка\nexport function putLike(id) {\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then(getResponse);\n}\n\n// Функция изменения аватара\nexport function patchAvatar(avatarUrl) {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarUrl,\n    }),\n  }).then(getResponse);\n}\n","import { putLike, deleteLike } from \"./api.js\";\n\n// @todo: Темплейт карточки\nexport const cardTemplate = document.querySelector(\"#card-template\").content;\n\n// @todo: Функция создания карточки\nexport function createCard(\n  cardTemplate,\n  item,\n  openImagePopup,\n  likedButton,\n  profileResult,\n  deleteCardServer,\n) {\n  const cardElement = cardTemplate\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\n  const likesCounter = cardTemplate.querySelector(\".likes__counter\");\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  cardImage.src = item.link;\n  cardImage.alt = item.name;\n  cardTitle.textContent = item.name;\n  likesCounter.textContent = item.likes.length;\n\n  // Скрыть кнопку удаления, если карточку загрузил не я\n  if (profileResult._id !== item.owner._id) {\n    deleteButton.classList.add(\"inactive\");\n  }\n\n  // Закрасить кнопку лайка там, где я его поставил\n  if (item.likes.some((like) => like._id === profileResult._id)) {\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  // Вызов функции удаления карточки с сервера\n  deleteButton.addEventListener(\"click\", function (evt) {\n    deleteCardServer(item._id)\n      .then(() => {\n        removeCard(evt);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  // Вызов функции постановки лайка\n  cardLikeButton.addEventListener(\"click\", function (evt) {\n    likedButton(evt, item, likesCounter);\n  });\n\n  // Вызов функции открытия картинки у карточки\n  cardImage.addEventListener(\"click\", function () {\n    openImagePopup(item);\n  });\n\n  return cardElement;\n}\n\n// @todo: Функция удаления карточки\nexport function removeCard(evt) {\n  const listItem = evt.target.closest(\".places__item\");\n  listItem.remove();\n}\n\n// Функция лайка\nexport function likedButton(evt, item, likesCounter) {\n  if (evt.target.classList.contains(\"card__like-button_is-active\")) {\n    deleteLike(item._id).then((res) => {\n      evt.target.classList.remove(\"card__like-button_is-active\");\n      likesCounter.textContent = res.likes.length;\n    });\n  } else {\n    putLike(item._id).then((res) => {\n      evt.target.classList.add(\"card__like-button_is-active\");\n      likesCounter.textContent = res.likes.length;\n      console.log(item.likes);\n    });\n  }\n}\n","// import {hideInputError} from \"../components/validation.js\";\n\n// Функция добавления класса popup_is-opened\nexport function openModal(item) {\n  item.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closeByEsc);\n}\n\n// Функция удаления класса popup_is-opened\nexport function closeModal(item) {\n  item.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closeByEsc);\n}\n\n// Функция закрытия через Esc\nexport function closeByEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closeModal(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\nexport function closePopupOverlay(evt) {\n  if (evt.currentTarget === evt.target) {\n    closeModal(evt.target);\n  }\n}\n","export const popupFormElement = document.querySelector(\".popup__form\");\nconst popupInput = popupFormElement.querySelector(\".popup__input\");\n\n// Функция, которая добавляет класс с ошибкой\nconst showInputError = (\n  popupFormElement,\n  popupInput,\n  errorMessage,\n  validationConfig,\n) => {\n  const formError = popupFormElement.querySelector(`.${popupInput.id}-error`);\n  popupInput.classList.add(validationConfig.inputErrorClass);\n  formError.textContent = errorMessage;\n  formError.classList.add(validationConfig.errorClass);\n};\n\n// Функция, которая удаляет класс с ошибкой\nexport const hideInputError = (\n  popupFormElement,\n  popupInput,\n  validationConfig,\n) => {\n  const formError = popupFormElement.querySelector(`.${popupInput.id}-error`);\n  popupInput.classList.remove(validationConfig.inputErrorClass);\n  if (formError) {\n    formError.classList.remove(validationConfig.errorClass);\n    formError.textContent = \"\";\n  }\n};\n\n// Функция, которая проверяет валидность поля\nconst isValid = (popupFormElement, popupInput, validationConfig) => {\n  if (popupInput.validity.patternMismatch) {\n    popupInput.setCustomValidity(popupInput.dataset.errorMessage);\n  } else {\n    popupInput.setCustomValidity(\"\");\n  }\n\n  if (!popupInput.validity.valid) {\n    showInputError(\n      popupFormElement,\n      popupInput,\n      popupInput.validationMessage,\n      validationConfig,\n    );\n  } else {\n    hideInputError(popupFormElement, popupInput, validationConfig);\n  }\n};\n\n// Функция, которая обрабатывает все инпуты\nconst setEventListeners = (popupFormElement, validationConfig) => {\n  const inputList = Array.from(\n    popupFormElement.querySelectorAll(validationConfig.popupInput),\n  );\n  const buttonElement = popupFormElement.querySelector(\n    validationConfig.buttonElement,\n  );\n  toggleButtonState(inputList, buttonElement);\n  inputList.forEach((popupInput) => {\n    popupInput.addEventListener(\"input\", () => {\n      isValid(popupFormElement, popupInput, validationConfig);\n      toggleButtonState(inputList, buttonElement, validationConfig);\n    });\n  });\n};\n\n// Функция, которая добавляет слушатель на все формы\nexport const enableValidation = (validationConfig) => {\n  const formList = Array.from(\n    document.querySelectorAll(validationConfig.popupFormElement),\n  );\n  formList.forEach((popupFormElement) => {\n    popupFormElement.addEventListener(\"submit\", (evt) => {\n      evt.preventDefault();\n    });\n    setEventListeners(popupFormElement, validationConfig);\n  });\n};\n\n// Функция, которая ищет хотя-бы одно невалидное поле\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((popupInput) => {\n    return !popupInput.validity.valid;\n  });\n};\n\n// Функция, которая активирует или деактивирует кнопку\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\n  // Если есть хотя бы один невалидный инпут\n  if (hasInvalidInput(inputList)) {\n    // сделаем кнопку неактивной\n    buttonElement.disabled = true;\n  } else {\n    // иначе сделаем кнопку активной\n    buttonElement.disabled = false;\n  }\n};\n\nexport const clearValidation = (popupFormElement, validationConfig) => {\n  const inputList = Array.from(\n    popupFormElement.querySelectorAll(validationConfig.popupInput),\n  );\n  const buttonElement = popupFormElement.querySelector(\n    validationConfig.buttonElement,\n  );\n\n  inputList.forEach((popupInput) => {\n    hideInputError(popupFormElement, popupInput, validationConfig);\n  });\n\n  toggleButtonState(inputList, buttonElement, validationConfig);\n};\n\nexport const clearState = (popupFormElement) => {\n  const inputList = Array.from(\n    popupFormElement.querySelectorAll(validationConfig.popupInput),\n  );\n  inputList.forEach((popupInput) => {\n    popupInput.value = \"\";\n  });\n};\n\n// Объект настроек валидации\nexport const validationConfig = {\n  popupFormElement: \".popup__form\",\n  popupInput: \".popup__input\",\n  buttonElement: \".popup__button\",\n  inactiveButtonClass: \".popup__button_disabled\",\n  inputErrorClass: \"form__input_type_error\",\n  errorClass: \"form__input-error_active\",\n};\n","import \"./pages/index.css\";\n\nimport { cardTemplate, createCard, likedButton } from \"./components/card.js\";\n\nimport {\n  openModal,\n  closeModal,\n  closePopupOverlay,\n} from \"./components/modal.js\";\n\nimport {\n  enableValidation,\n  clearValidation,\n  popupFormElement,\n  validationConfig,\n  clearState,\n} from \"./components/validation.js\";\n\nimport {\n  loadingProfileInfo,\n  loadingCardsInfo,\n  patchEditProfile,\n  postNewCard,\n  deleteCardServer,\n  patchAvatar,\n} from \"./components/api.js\";\n\n// @todo: DOM узлы\nconst placesList = document.querySelector(\".places__list\");\n\nconst profile = document.querySelector(\".profile\");\nconst profileInfo = profile.querySelector(\".profile__info\");\nconst profileEditButton = profileInfo.querySelector(\".profile__edit-button\");\nconst profileAddButton = profile.querySelector(\".profile__add-button\");\nconst profileTitle = profileInfo.querySelector(\".profile__title\");\nconst profileDescription = profileInfo.querySelector(\".profile__description\");\nconst profileImage = profile.querySelector(\".profile__image\");\n\nconst formElement = document.forms[\"edit-profile\"];\nconst nameInput = formElement.elements.name;\nconst jobInput = formElement.elements.description;\n\nconst allPopups = document.querySelectorAll(\".popup\");\n\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\nconst popupImage = popupTypeImage.querySelector(\".popup__image\");\n\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\n\nconst newPlace = document.forms[\"new-place\"];\n\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\nconst profileAvatar = document.querySelector(\".profile__image\");\nconst avatarForm = document.forms[\"avatar-form\"];\nconst avatarInputUrl = avatarForm.elements.link;\n\n// Функция добавления новой карточки\nfunction addNewCard(evt) {\n  evt.preventDefault();\n\n  const formButton = evt.submitter;\n  const defaultTextButton = formButton.textContent;\n  formButton.textContent = \"Сохранение...\";\n\n  const placeName = newPlace.elements[\"place-name\"];\n  const link = newPlace.elements.link;\n\n  postNewCard(placeName.value, link.value)\n    .then((item) => {\n      const newCardElement = createCard(\n        cardTemplate,\n        item,\n        openImagePopup,\n        likedButton,\n        item.owner,\n        deleteCardServer,\n      );\n      placesList.prepend(newCardElement);\n      closeModal(popupTypeNewCard);\n      evt.target.reset();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    })\n    .finally(() => {\n      formButton.textContent = defaultTextButton;\n    });\n}\n\n// Функция открытия поп-апа для картинок\nfunction openImagePopup(item) {\n  const popupCaption = popupTypeImage.querySelector(\".popup__caption\");\n\n  popupImage.src = item.link;\n  popupImage.alt = item.name;\n  popupCaption.textContent = item.name;\n  openModal(popupTypeImage);\n}\n\n// Функция редактирования профиля\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  const formButton = evt.submitter;\n  const defaultTextButton = formButton.textContent;\n  formButton.textContent = \"Сохранение...\";\n\n  profileTitle.textContent = nameInput.value;\n  profileDescription.textContent = jobInput.value;\n\n  patchEditProfile(nameInput.value, jobInput.value)\n    .then((result) => {\n      console.log(result);\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    })\n    .finally(() => {\n      formButton.textContent = defaultTextButton;\n    });\n\n  closeModal(popupTypeEdit);\n}\n\n// Функция перебора всех поп-апов для удаления класса popup_is-opened\nallPopups.forEach(function (item) {\n  const popupCloseButton = item.querySelector(\".popup__close\");\n  popupCloseButton.addEventListener(\"click\", function () {\n    closeModal(item);\n  });\n  item.addEventListener(\"click\", closePopupOverlay);\n  item.classList.add(\"popup_is-animated\");\n});\n\n// Вывод данных о профиле и карточках с сервера\nPromise.all([loadingProfileInfo(), loadingCardsInfo()]).then(\n  ([profileResult, cardsResult]) => {\n    console.log(profileResult);\n    console.log(cardsResult);\n\n    profileTitle.textContent = profileResult.name;\n    profileDescription.textContent = profileResult.about;\n    profileImage.style.backgroundImage = `url(${profileResult.avatar})`;\n\n    // @todo: Вывести карточки на страницу\n    cardsResult.forEach(function (item) {\n      const eachElement = createCard(\n        cardTemplate,\n        item,\n        openImagePopup,\n        likedButton,\n        profileResult,\n        deleteCardServer,\n      );\n      placesList.append(eachElement);\n    });\n  },\n);\n\n// Вызов функции редактирования аватара\navatarForm.addEventListener(\"submit\", function (evt) {\n  evt.preventDefault();\n  const formButton = evt.submitter;\n  const defaultTextButton = formButton.textContent;\n  formButton.textContent = \"Сохранение...\";\n  patchAvatar(avatarInputUrl.value)\n    .then((result) => {\n      profileAvatar.style.backgroundImage = `url(${result.avatar})`;\n      closeModal(popupAvatar);\n      evt.target.reset();\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      formButton.textContent = defaultTextButton;\n    });\n});\n\n// Вызов функции открытия поп-апа редактирования профиля нажатием на карандаш\nprofileEditButton.addEventListener(\"click\", () => {\n  openModal(popupTypeEdit);\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  clearValidation(popupFormElement, validationConfig);\n});\n\n// Вызов функции открытия поп-апа добавления нового места нажатием на плюсик\nprofileAddButton.addEventListener(\"click\", () => {\n  openModal(popupTypeNewCard);\n  clearValidation(popupTypeNewCard, validationConfig);\n  clearState(popupTypeNewCard);\n});\n\n// Вызов функции открытия попапа аватара\nprofileImage.addEventListener(\"click\", function () {\n  openModal(popupAvatar);\n  clearValidation(avatarForm, validationConfig);\n});\n\n// Вызов функции добавления новой карточки\nnewPlace.addEventListener(\"submit\", addNewCard);\n\n// Вызов функции редактирования профиля\nformElement.addEventListener(\"submit\", handleProfileFormSubmit);\n\n// Вызов функции включения валидации всех форм\nenableValidation(validationConfig);\n"],"names":["config","baseUrl","headers","authorization","getResponse","result","ok","json","Promise","reject","concat","status","deleteCardServer","id","fetch","method","then","cardTemplate","document","querySelector","content","createCard","item","openImagePopup","likedButton","profileResult","cardElement","cloneNode","deleteButton","cardLikeButton","likesCounter","cardImage","cardTitle","src","link","alt","name","textContent","likes","length","_id","owner","classList","add","some","like","addEventListener","evt","target","closest","remove","removeCard","catch","err","console","log","contains","res","putLike","openModal","closeByEsc","closeModal","removeEventListener","key","closePopupOverlay","currentTarget","popupFormElement","hideInputError","popupInput","validationConfig","formError","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","inactiveButtonClass","placesList","profile","profileInfo","profileEditButton","profileAddButton","profileTitle","profileDescription","profileImage","formElement","forms","nameInput","elements","jobInput","description","allPopups","popupTypeImage","popupImage","popupTypeNewCard","popupTypeEdit","newPlace","popupAvatar","profileAvatar","avatarForm","avatarInputUrl","popupCaption","all","_ref","_ref2","cardsResult","about","style","backgroundImage","avatar","eachElement","append","preventDefault","avatarUrl","formButton","submitter","defaultTextButton","value","body","JSON","stringify","reset","finally","clearState","placeName","postNewCard","newCardElement","prepend","error","patchEditProfile","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}